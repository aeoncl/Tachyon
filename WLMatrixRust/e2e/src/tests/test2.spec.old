import Net from "net";

async function sleep(ms: number) {
    await _sleep(ms);
}

function _sleep(ms: number) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}

describe('handshake tests', () => {
    let client: Net.Socket;
    beforeAll(() => {
        const port = 1863;
        const host = '127.0.0.1';
        // Create a new TCP client.
        client = new Net.Socket();
        // Send a connection request to the server.
        client.connect({ port: port, host: host }), function() {
            // If there is no error, the server has accepted the request and created a new 
            // socket dedicated to us.
            console.log('TCP connection established with the server.');
        };
    });

    afterAll(() => client.end());

    afterEach(() => client.removeAllListeners("data"))

    it('MULTI handhsake test', done => {

        let responses = ["VER 1 MSNP18\r\nCVR 2 14.0.8117.0416 14.0.8117.0416 14.0.8117.0416 localhost localhost\r\n"];
        let count = 0;
        client.on("data", (data) => {
            expect(data.toString()).toBe(responses[count])
            count+=1;
            if(count>=responses.length){
                done();
            }
        });
        client.write("VER 1 MSNP18 MSNP17 CVR0\r\n");
        client.write("CVR 2 0x0409 winnt 6.0.0 i386 MSNMSGR 14.0.8117.0416 msmsgs login@email.com\r\n");
    });
});
